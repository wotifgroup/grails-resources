diff --git a/ResourcesGrailsPlugin.groovy b/ResourcesGrailsPlugin.groovy
index ecfcf1f..c92df85 100644
--- a/ResourcesGrailsPlugin.groovy
+++ b/ResourcesGrailsPlugin.groovy
@@ -22,7 +22,7 @@ class ResourcesGrailsPlugin {
     static DEFAULT_URI_PREFIX = 'static'
     static DEFAULT_ADHOC_PATTERNS = ["/images/*", "*.css", "*.js"].asImmutable()
 
-    def version = "1.1.5"
+    def version = "1.1.7_wotif"
     def grailsVersion = "1.3 > *"
 
     def loadAfter = ['logging'] // retained to ensure correct loading under Grails < 2.0
diff --git a/application.properties b/application.properties
index 3237a2b..d31d048 100644
--- a/application.properties
+++ b/application.properties
@@ -1,4 +1,6 @@
 #Grails Metadata file
-#Thu Oct 20 16:15:35 BST 2011
-app.grails.version=1.3.7
+#Thu Apr 26 11:51:44 EST 2012
+app.grails.version=2.0.3
 app.name=resources
+plugins.rest-client-builder=1.0.2
+plugins.svn=1.0.2
diff --git a/grails-app/conf/BuildConfig.groovy b/grails-app/conf/BuildConfig.groovy
index 0f75c79..9c8c279 100644
--- a/grails-app/conf/BuildConfig.groovy
+++ b/grails-app/conf/BuildConfig.groovy
@@ -9,7 +9,8 @@ grails.project.dependency.resolution = {
         // excludes 'ehcache'
     }
     log "warn" // log level of Ivy resolver, either 'error', 'warn', 'info', 'debug' or 'verbose'
-    repositories {        
+    repositories {
+        mavenLocal()         
         grailsPlugins()
         grailsHome()
         grailsCentral()
@@ -31,7 +32,7 @@ grails.project.dependency.resolution = {
         build(":tomcat:$grailsVersion") {
             export = false
         }
-        build(":release:1.0.0.RC3") {
+        build(":release:2.0.0") {
             export = false
         }
     }
diff --git a/grails-app/taglib/org/grails/plugin/resource/ResourceTagLib.groovy b/grails-app/taglib/org/grails/plugin/resource/ResourceTagLib.groovy
index cccba4f..61f5303 100644
--- a/grails-app/taglib/org/grails/plugin/resource/ResourceTagLib.groovy
+++ b/grails-app/taglib/org/grails/plugin/resource/ResourceTagLib.groovy
@@ -559,7 +559,9 @@ class ResourceTagLib {
         def linkUrl = res ? res.linkUrl : reluri
 
         def baseUrl = '' // @todo get from config
-        if (linkUrl.contains('://') || baseUrl) {
+        if(linkUrl.startsWith('//')) {
+            return [uri: request?.isSecure() ? "https:${linkUrl}" : "http:${linkUrl}", resource:res]
+        } else if (linkUrl.contains('://') || baseUrl) {
             // @todo do we need to toggle http/https here based on current request protocol?
             return [uri:baseUrl ? baseUrl+linkUrl : linkUrl, resource:res]
         } else {
